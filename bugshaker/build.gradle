buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.12.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4'
        classpath 'com.noveogroup.android:check:1.2.3'
        classpath 'com.btkelly:gnag:0.1.4'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.noveogroup.android.check'
apply plugin: 'gnag-plugin'

// Shared project metadata

ext {
    bugShakerVersion = '1.3.0'
    bugShakerWebsiteUrl = 'https://github.com/stkent/bugshaker-android'
    bugShakerGitHubRepoName = 'stkent/bugshaker-android'
    bugShakerVcsUrl = "https://github.com/${bugShakerGitHubRepoName}.git"
    bugShakerGroupId = 'com.github.stkent'
    bugShakerArtifactId = 'bugshaker'
    bugShakerDescription = 'Shake to send a bug report!'
}

configurations {
    javadocDeps
}

// If this is skipped, the upload to Bintray will succeed but the version in filenames will be
// 'unspecified'.
version = bugShakerVersion

// If this is skipped, the upload to Bintray will succeed but the reported group id will be
// the root project name (in this case, BugShaker) rather than the group id specified
// in the install or bintray configuration closures.
group = bugShakerGroupId

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName bugShakerVersion
    }

    buildTypes {
        release {
            consumerProguardFiles 'proguard/rxjava.pro', 'proguard/bugshaker.pro', 'proguard/v7support.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    def supportLibraryVersion = '25.2.0'
    def seismicVersion = '1.0.2'

    javadocDeps "com.android.support:support-annotations:${supportLibraryVersion}"
    javadocDeps "com.squareup:seismic:${seismicVersion}"

    compile "com.squareup:seismic:${seismicVersion}"
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.0'
    compile 'com.loopj.android:android-async-http:1.4.9'

    compile('com.google.android.gms:play-services-maps:9.0.2') { ext.optional = true }
    compile("com.android.support:appcompat-v7:${supportLibraryVersion}") { ext.optional = true }

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
}

check {
    checkstyle {
        config 'config/checkstyle.xml'
    }

    findbugs {
        config 'config/findbugs.xml'
    }

    pmd {
        config 'config/pmd.xml'
    }
}

gnag {
    gitHubRepoName 'stkent/bugshaker-android'
    failBuildOnError true
}

install {
    repositories.mavenInstaller {
        pom {
            // See comment by Endre St√∏lsvik on https://issues.gradle.org/browse/GRADLE-1749.
            withXml {
                def depMap = configurations.compile.dependencies.collectEntries { [it.name, it] }
                asNode().dependencies.dependency.findAll {
                    def dep = depMap.get(it.artifactId.text())
                    return dep?.hasProperty('optional') && dep.optional
                }.each {
                    if (it.optional) {
                        it.optional.value = 'true'
                    } else {
                        it.appendNode('optional', 'true')
                    }
                }
            }

            project {
                groupId bugShakerGroupId
                artifactId bugShakerArtifactId
                version bugShakerVersion
                packaging 'aar'

                // This does not seem to delegate to project.name as I expected it would.
                name bugShakerArtifactId
                description bugShakerDescription
                inceptionYear '2016'
                url bugShakerWebsiteUrl

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'stkent'
                        name 'Stuart Kent'
                        email 'skent.dev@gmail.com'
                    }
                }

                scm {
                    connection bugShakerVcsUrl
                    url bugShakerWebsiteUrl
                }
            }
        }
    }
}

ext {
    // command-line deployment
    bintrayUserParameterName = 'bintrayUser'
    bintrayKeyParameterName = 'bintrayKey'

    // CI deployment
    bintrayUserEnvVarName = 'BINTRAY_USER'
    bintrayKeyEnvVarName = 'BINTRAY_KEY'
}

bintray {
    user = project.hasProperty(bintrayUserParameterName) ?
            project.property(bintrayUserParameterName) : System.getenv(bintrayUserEnvVarName)

    key = project.hasProperty(bintrayKeyParameterName) ?
            project.property(bintrayKeyParameterName) : System.getenv(bintrayKeyEnvVarName)

    dryRun = false
    publish = false

    configurations = ['archives']

    pkg {
        repo = 'android-libraries'
        name = bugShakerArtifactId
        desc = bugShakerDescription
        websiteUrl = bugShakerWebsiteUrl
        labels = ['android', 'bug reporting', 'screenshot', 'email']
        licenses = ['Apache-2.0']
        publicDownloadNumbers = true

        vcsUrl = bugShakerVcsUrl
        githubRepo = bugShakerGitHubRepoName
        githubReleaseNotesFile = 'CHANGELOG.md'
        issueTrackerUrl = "https://github.com/${bugShakerGitHubRepoName}/issues"

        version {
            name = bugShakerVersion
            desc = bugShakerDescription
            // todo: set this up later for pulling release notes from github
            // vcsTag = bugShakerVersion
            released = new Date()
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += configurations.javadocDeps
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options {
        title = "BugShaker v${bugShakerVersion} Documentation"
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.getDestinationDir()
    classifier = 'javadoc'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
